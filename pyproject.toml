[project]
name = "deprecations-rss"
version = "0.1.0"
description = "Daily-updated RSS feed tracking AI model deprecations"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "leblancfg"},
]

dependencies = [
    "httpx>=0.27.0",
    "beautifulsoup4>=4.12.3",
    "feedgen>=1.0.0",
    "pydantic>=2.8.2",
    "jinja2>=3.1.4",
    "python-dateutil>=2.9.0",
    "pytest>=8.3.2",
    "pytest-describe>=2.2.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "ruff>=0.6.3",
    "mypy>=1.11.2",
    "types-python-dateutil>=2.9.0",
    "types-beautifulsoup4>=4.12.0",
]
playwright = [
    "playwright>=1.47.0",
]
[tool.ruff]
line-length = 100
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
]
ignore = [
    "E501",  # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
explicit_package_bases = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*", "Describe*"]
python_functions = ["test_*", "it_*"]
asyncio_mode = "auto"
addopts = "-v --strict-markers"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

